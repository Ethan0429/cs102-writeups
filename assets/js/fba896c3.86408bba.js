"use strict";(self.webpackChunkcosc_102_writeups=self.webpackChunkcosc_102_writeups||[]).push([[6035],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),r=n(7294),l=n(6010),i=n(2466),o=n(6550),s=n(1980),u=n(7392),p=n(12);function c(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,u]=h({queryString:n,groupId:a}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),g=(()=>{const e=s??c;return m({value:e,tabValues:l})?e:null})();(0,r.useEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),f(e)}),[u,f,l]),tabValues:l}}var g=n(2389);const b="tabList__CuJ",k="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=u[n].value;a!==o&&(c(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},i,{className:(0,l.Z)("tabs__item",k,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;if(t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},9031:(e,t,n)=>{n.d(t,{Z:()=>p});var a,r,l=n(7294),i=n(6010),o=n(9960);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(this,arguments)}const u=e=>{let{title:t,titleId:n,...i}=e;return l.createElement("svg",s({fill:"#fff",width:15,height:15,viewBox:"0 0 64 64",xmlns:"http://www.w3.org/2000/svg",xmlSpace:"preserve",style:{fillRule:"evenodd",clipRule:"evenodd",strokeLinejoin:"round",strokeMiterlimit:2},"aria-labelledby":n},i),t?l.createElement("title",{id:n},t):null,l.createElement("path",{style:{fill:"none"},d:"M-896 0H384v800H-896z"}),a||(a=l.createElement("path",{d:"M36.026 20.058H14.934a2.99 2.99 0 0 0-2.989 2.989v25.964A2.99 2.99 0 0 0 14.934 52h26.024a2.99 2.99 0 0 0 2.989-2.989V28.058h3.999v21.948a5.999 5.999 0 0 1-5.995 5.995h-28.01a5.998 5.998 0 0 1-5.995-5.995V22.052a5.997 5.997 0 0 1 5.995-5.995h22.085v4.001Z"})),r||(r=l.createElement("path",{d:"M55.925 25.32H51.92V14.839L24.026 42.732 21.194 39.9l27.895-27.895H38.605V8h17.318l.002.001V25.32Z"})))};function p(e){let{to:t,text:n,className:a}=e;return l.createElement(o.Z,{to:t,className:(0,i.Z)("group",a)},n,l.createElement(u,{className:"ml-0.5 translate-y-0.5 group-hover:fill-[#00ff37]"}))}},3677:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),l=n(4866),i=n(5162),o=n(9031);const s={sidebar_position:2},u="Function",p={unversionedId:"references/general/function",id:"references/general/function",title:"Function",description:"An isolated block of code that performs a specific task.",source:"@site/docs/references/general/function.mdx",sourceDirName:"references/general",slug:"/references/general/function",permalink:"/cs102-writeups/docs/references/general/function",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"Sidebar",previous:{title:"Data Types",permalink:"/cs102-writeups/docs/references/general/data-types"},next:{title:"Scope",permalink:"/cs102-writeups/docs/references/general/scope"}},c={},d=[{value:"Summary",id:"summary",level:2},{value:"Usage/Syntax",id:"usagesyntax",level:2},{value:"General syntax",id:"general-syntax",level:3},{value:"Examples",id:"examples",level:3},{value:"Return type",id:"return-type",level:3},{value:"Example",id:"example",level:4},{value:"Parameters/Arguments",id:"parametersarguments",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>main()</code>",id:"main",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example-2",level:4}],m={toc:d};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"function"},"Function"),(0,r.kt)("p",null,"An isolated block of code that performs a specific task."),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"Functions are never required to be used, but they are useful for isolating code for organization and re-usability."),(0,r.kt)("p",null,"Functions are ",(0,r.kt)(o.Z,{to:"/docs/references/general/scope",text:"scoped",mdxType:"LinkWithIcon"}),", meaning anything defined inside the function is only accessible inside the function"),(0,r.kt)("p",null,"Typically, a function will compute a value and ",(0,r.kt)("strong",{parentName:"p"},"return")," it to the ",(0,r.kt)("strong",{parentName:"p"},"caller"),"."),(0,r.kt)(l.Z,{defaultValue:"caller",values:[{label:"Caller",value:"caller"},{label:"Return",value:"return"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"caller",mdxType:"TabItem"},(0,r.kt)("admonition",{title:"Caller",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The caller is the code that calls the function. The caller is responsible for passing the parameters to the function and handling the return value."))),(0,r.kt)(i.Z,{value:"return",mdxType:"TabItem"},(0,r.kt)("admonition",{title:"Return",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To return a value is just what it sounds like: to give a value back to the caller. The value is given back using the ",(0,r.kt)("inlineCode",{parentName:"p"},"return")," keyword. ",(0,r.kt)("inlineCode",{parentName:"p"},"return 1")," for example, will return the integer ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," to the caller.")))),(0,r.kt)("h2",{id:"usagesyntax"},"Usage/Syntax"),(0,r.kt)("p",null,"Functions can be written in many ways, but for the purposes of this course they will follow a particular syntax."),(0,r.kt)("h3",{id:"general-syntax"},"General syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"<return type> <name>(<parameters>) {\n    <body>\n}\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Return type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Parameters"),(0,r.kt)("th",{parentName:"tr",align:null},"Body"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"The type of the value returned by the function, e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"int"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"char"),", etc"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the function. Can be anything you want, so long as it does not conflict with existing function names"),(0,r.kt)("td",{parentName:"tr",align:null},"A list of variable(s) that you ",(0,r.kt)("strong",{parentName:"td"},"pass")," to the function to be used in the body (optional)"),(0,r.kt)("td",{parentName:"tr",align:null},"The code to be executed when the function is called")))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// defining a function that returns an int\nint add(int a, int b) {\n    return a + b;\n}\n\n// calling the function\nint sum = add(1, 2); // sum = 3\n\n// defining a function that returns a char\nchar get_first_letter(std::string str) {\n    return str[0];\n}\n\n// calling the function\nchar first_letter = get_first_letter(\"Hello, world!\"); // first_letter = 'H'\n")),(0,r.kt)("h3",{id:"return-type"},"Return type"),(0,r.kt)("p",null,"Return types can be any valid C++ type. One special type is ",(0,r.kt)("inlineCode",{parentName:"p"},"void"),", which means that the function does not return a value. These are used for functions that modify a variable or perform an action, but do not need to return anything."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'// defining a function that does not return a value\nvoid print(std::string str) {\n    std::cout << str << std::endl;\n}\n\n// calling the function\nprint("Hello, world!"); // prints "Hello, world!" to the console\n')),(0,r.kt)("p",null,"In the above example, ",(0,r.kt)("inlineCode",{parentName:"p"},"print()")," does not return anything since all it does is print text to the screen, so we use ",(0,r.kt)("inlineCode",{parentName:"p"},"void")," as the return type."),(0,r.kt)("h3",{id:"parametersarguments"},"Parameters/Arguments"),(0,r.kt)("p",null,"Parameters are variables that you pass to the function to be used in the body. If you want to perform a specific task but need more information to do so, then you can pass that information to the function as a parameter."),(0,r.kt)("p",null,"Functions don't need parameters, but they can have as many as you want."),(0,r.kt)("p",null,"Parameters are separated by commas, and are written in the following format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"<type> <name>\n")),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'// no parameters\nvoid print_hello() {\n    std::cout << "Hello, world!" << std::endl;\n}\n\n// one parameter of type string and name str\nvoid print(std::string str) {\n    std::cout << str << std::endl;\n}\n\n// two parameters of type int and name a and b\nint add(int a, int b) {\n    return a + b;\n}\n')),(0,r.kt)("p",null,"When passing parameters to a function, the types must match the types of the parameters in the function definition, and the order must match as well. The values being passed can be variables, literals, or expressions."),(0,r.kt)("admonition",{title:"Literal",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you didn't know, a literal is a value that is written directly into the code. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," is a literal integer, ",(0,r.kt)("inlineCode",{parentName:"p"},'"Hello, world!"')," is a literal string, and ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," is a literal boolean. They have no variable name, and are not stored in memory.")),(0,r.kt)("h2",{id:"main"},(0,r.kt)("inlineCode",{parentName:"h2"},"main()")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"main()")," function is a special function that is automatically called when the program is run. It is the entry point of the program, and is where the program starts executing."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"main()")," function is always defined in the global scope, and is always of type ",(0,r.kt)("inlineCode",{parentName:"p"},"int"),"."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"main()")," function takes two optional parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int main(int argc, char** argv) {\n    // ...\n}\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"argc")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of arguments passed to the program")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"argv")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"char**")),(0,r.kt)("td",{parentName:"tr",align:null},"An array of strings containing the arguments passed to the program (C-Style)")))),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./my_program hello world\n")),(0,r.kt)("p",null,"If we had a program called ",(0,r.kt)("inlineCode",{parentName:"p"},"my_program")," that took two arguments, then ",(0,r.kt)("inlineCode",{parentName:"p"},"argc")," would be ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"argv")," would be ",(0,r.kt)("inlineCode",{parentName:"p"},'["./my_program", "hello", "world"]'),"."),(0,r.kt)("p",null,"In other words, once the program enters main, the ",(0,r.kt)("inlineCode",{parentName:"p"},"argc")," variable will be set to the number of arguments passed to the program + 1 (because we include the name of the program as well), and the ",(0,r.kt)("inlineCode",{parentName:"p"},"argv")," variable will be set to an array of strings containing the arguments passed to the program (including the name of the program at ",(0,r.kt)("inlineCode",{parentName:"p"},"argv[0]"),")."))}h.isMDXComponent=!0}}]);